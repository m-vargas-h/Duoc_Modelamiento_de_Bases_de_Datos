/*
LIMPIEZA PARA EJECUCION LIMPIA DEL SCRIPT
*/
DROP TABLE REGION CASCADE CONSTRAINTS;
DROP TABLE COMUNA CASCADE CONSTRAINTS;
DROP TABLE AFP CASCADE CONSTRAINTS;
DROP TABLE SALUD CASCADE CONSTRAINTS;
DROP TABLE EMPLEADO CASCADE CONSTRAINTS;
DROP TABLE ADMINISTRATIVO CASCADE CONSTRAINTS;
DROP TABLE VENDEDOR CASCADE CONSTRAINTS;
DROP TABLE CATEGORIA CASCADE CONSTRAINTS;
DROP TABLE MARCA CASCADE CONSTRAINTS;
DROP TABLE PROVEEDOR CASCADE CONSTRAINTS;
DROP TABLE PRODUCTO CASCADE CONSTRAINTS;
DROP TABLE MEDIO_PAGO CASCADE CONSTRAINTS;
DROP TABLE VENTA CASCADE CONSTRAINTS;
DROP TABLE DETALLE_VENTA CASCADE CONSTRAINTS;

DROP SEQUENCE seq_salud_id;
DROP SEQUENCE seq_empleado_id;

/*
CASO 1: IMPLEMENTACION DEL MODELO
*/
CREATE TABLE REGION (
    id_region   NUMBER(4) NOT NULL,
    nom_region  VARCHAR2(255) NOT NULL,
    CONSTRAINT pk_region PRIMARY KEY (id_region)
);

CREATE TABLE COMUNA (
    id_comuna   NUMBER(4) NOT NULL,
    nom_comuna  VARCHAR2(100) NOT NULL,
    cod_region  NUMBER(4) NOT NULL,
    CONSTRAINT pk_comuna PRIMARY KEY (id_comuna)
);

CREATE TABLE AFP (
    id_afp      NUMBER(5) GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 210 INCREMENT BY 6),
    nom_afp     VARCHAR2(255) NOT NULL,
    CONSTRAINT pk_afp PRIMARY KEY (id_afp)
);

CREATE TABLE SALUD (
    id_salud    NUMBER(4) NOT NULL,
    nom_salud   VARCHAR2(40) NOT NULL,
    CONSTRAINT pk_salud PRIMARY KEY (id_salud)
);

CREATE TABLE EMPLEADO (
    id_empleado         NUMBER(4) NOT NULL,
    rut_empleado        VARCHAR2(10) NOT NULL,
    nombre_empleado     VARCHAR2(25) NOT NULL,
    apellido_paterno    VARCHAR2(25) NOT NULL,
    apellido_materno    VARCHAR2(25) NOT NULL,
    fecha_contratacion  DATE NOT NULL,
    sueldo_base         NUMBER(10) NOT NULL,
    bono_jefatura       NUMBER(10),
    activo              CHAR(1) NOT NULL,
    tipo_empleado       VARCHAR2(25) NOT NULL,
    cod_empleado        NUMBER(4),
    cod_salud           NUMBER(4) NOT NULL,
    cod_afp             NUMBER(5) NOT NULL,
    CONSTRAINT pk_empleado PRIMARY KEY (id_empleado),
    CONSTRAINT un_empleado_rut UNIQUE (rut_empleado),
    CONSTRAINT ck_empleado_activo CHECK (activo IN ('S','N'))
);

CREATE TABLE ADMINISTRATIVO (
    id_empleado NUMBER(4) NOT NULL,
    CONSTRAINT pk_administrativo PRIMARY KEY (id_empleado)
);

CREATE TABLE VENDEDOR (
    id_empleado     NUMBER(4) NOT NULL,
    comision_venta  NUMBER(5,2) NOT NULL,
    CONSTRAINT pk_vendedor PRIMARY KEY (id_empleado)
);

CREATE TABLE CATEGORIA (
    id_categoria        NUMBER(3) NOT NULL,
    nombre_categoria    VARCHAR2(255) NOT NULL,
    CONSTRAINT pk_categoria PRIMARY KEY (id_categoria)
);

CREATE TABLE MARCA (
    id_marca        NUMBER(3) NOT NULL,
    nombre_marca    VARCHAR2(25) NOT NULL,
    CONSTRAINT pk_marca PRIMARY KEY (id_marca)
);

CREATE TABLE PROVEEDOR (
    id_proveedor        NUMBER(5) NOT NULL,
    nombre_proveedor    VARCHAR2(150) NOT NULL,
    rut_proveedor       VARCHAR2(10) NOT NULL,
    telefono            VARCHAR2(10) NOT NULL,
    email               VARCHAR2(200) NOT NULL,
    direccion           VARCHAR2(200) NOT NULL,
    cod_comuna          NUMBER(4) NOT NULL,
    CONSTRAINT pk_proveedor PRIMARY KEY (id_proveedor),
    CONSTRAINT un_proveedor_rut UNIQUE (rut_proveedor)
);

CREATE TABLE PRODUCTO (
    id_producto     NUMBER(4) NOT NULL,
    nombre_producto VARCHAR2(100) NOT NULL,
    precio_unitario NUMBER NOT NULL,
    origen_nacional CHAR(1) NOT NULL,
    stock_minimo    NUMBER(3) NOT NULL,
    activo          CHAR(1) NOT NULL,
    cod_marca       NUMBER(3) NOT NULL,
    cod_categoria   NUMBER(3) NOT NULL,
    cod_proveedor   NUMBER(5) NOT NULL,
    CONSTRAINT pk_producto PRIMARY KEY (id_producto),
    CONSTRAINT ck_producto_origen CHECK (origen_nacional IN ('S','N')),
    CONSTRAINT ck_producto_activo CHECK (activo IN ('S','N'))
);

CREATE TABLE MEDIO_PAGO (
    id_mpago        NUMBER(3) NOT NULL,
    nombre_mpago    VARCHAR2(50) NOT NULL,
    CONSTRAINT pk_mediopago PRIMARY KEY (id_mpago)
);

CREATE TABLE VENTA (
    id_venta        NUMBER(4) GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 5050 INCREMENT BY 3),
    fecha_venta     DATE NOT NULL,
    total_venta     NUMBER(10) NOT NULL,
    cod_mpago       NUMBER(3) NOT NULL,
    cod_empleado    NUMBER(4) NOT NULL,
    CONSTRAINT pk_venta PRIMARY KEY (id_venta)
);

CREATE TABLE DETALLE_VENTA (
    cod_venta       NUMBER(4) NOT NULL,
    cod_producto    NUMBER(4) NOT NULL,
    cantidad        NUMBER(6) NOT NULL,
    CONSTRAINT pk_detalleventa PRIMARY KEY (cod_venta)
);

-- COMUNA -> REGION
ALTER TABLE COMUNA
ADD CONSTRAINT fk_comuna_region FOREIGN KEY (cod_region)
REFERENCES REGION(id_region);

-- EMPLEADO -> SALUD
ALTER TABLE EMPLEADO
ADD CONSTRAINT fk_empleado_salud FOREIGN KEY (cod_salud)
REFERENCES SALUD(id_salud);

-- EMPLEADO -> AFP
ALTER TABLE EMPLEADO
ADD CONSTRAINT fk_empleado_afp FOREIGN KEY (cod_afp)
REFERENCES AFP(id_afp);

-- PROVEEDOR -> COMUNA
ALTER TABLE PROVEEDOR
ADD CONSTRAINT fk_proveedor_comuna FOREIGN KEY (cod_comuna)
REFERENCES COMUNA(id_comuna);

-- PRODUCTO -> MARCA
ALTER TABLE PRODUCTO
ADD CONSTRAINT fk_producto_marca FOREIGN KEY (cod_marca)
REFERENCES MARCA(id_marca);

-- PRODUCTO -> CATEGORIA
ALTER TABLE PRODUCTO
ADD CONSTRAINT fk_producto_categoria FOREIGN KEY (cod_categoria)
REFERENCES CATEGORIA(id_categoria);

-- PRODUCTO -> PROVEEDOR
ALTER TABLE PRODUCTO
ADD CONSTRAINT fk_producto_proveedor FOREIGN KEY (cod_proveedor)
REFERENCES PROVEEDOR(id_proveedor);

-- VENTA -> MEDIO_PAGO
ALTER TABLE VENTA
ADD CONSTRAINT fk_venta_mediopago FOREIGN KEY (cod_mpago)
REFERENCES MEDIO_PAGO(id_mpago);

-- VENTA -> EMPLEADO
ALTER TABLE VENTA
ADD CONSTRAINT fk_venta_empleado FOREIGN KEY (cod_empleado)
REFERENCES EMPLEADO(id_empleado);

-- DETALLE_VENTA -> VENTA
ALTER TABLE DETALLE_VENTA
ADD CONSTRAINT fk_detalle_venta FOREIGN KEY (cod_venta)
REFERENCES VENTA(id_venta);

-- DETALLE_VENTA -> PRODUCTO
ALTER TABLE DETALLE_VENTA
ADD CONSTRAINT fk_detalle_producto FOREIGN KEY (cod_producto)
REFERENCES PRODUCTO(id_producto);

-- ADMINISTRATIVO -> EMPLEADO
ALTER TABLE ADMINISTRATIVO
ADD CONSTRAINT fk_administrativo_empleado FOREIGN KEY (id_empleado)
REFERENCES EMPLEADO(id_empleado);

-- VENDEDOR -> EMPLEADO
ALTER TABLE VENDEDOR
ADD CONSTRAINT fk_vendedor_empleado FOREIGN KEY (id_empleado)
REFERENCES EMPLEADO(id_empleado);

/*
CASO 2: MODIFICANDO EL MODELO
*/
-- Sueldo base mínimo de $400.000
ALTER TABLE EMPLEADO
ADD CONSTRAINT ck_empleado_sueldo_minimo
CHECK (sueldo_base >= 400000);

-- Comisión para vendedores entre 0 y 0.25
ALTER TABLE VENDEDOR
ADD CONSTRAINT ck_vendedor_comision_valida
CHECK (comision_venta BETWEEN 0 AND 0.25);

-- Stock mínimo de al menos 3 unidades para producto
ALTER TABLE PRODUCTO
ADD CONSTRAINT ck_producto_stock_minimo
CHECK (stock_minimo >= 3);

-- Correo electrónico unico para proveedor
ALTER TABLE PROVEEDOR
ADD CONSTRAINT un_proveedor_email
UNIQUE (email);

-- El nombre de cada marca debe ser único
ALTER TABLE MARCA
ADD CONSTRAINT un_marca_nombre
UNIQUE (nombre_marca);

-- La cantidad vendida en detalle_venta no puede ser 0 ni una cantidad negativa
ALTER TABLE DETALLE_VENTA
ADD CONSTRAINT ck_detalleventa_cantidad_valida
CHECK (cantidad >= 1);

/*
CASO 3: POBLAMIENTO DEL MODELO
*/
-- Secuencia para SALUD
CREATE SEQUENCE seq_salud_id
START WITH 2050
INCREMENT BY 10
NOCACHE
NOCYCLE;

-- Secuencia para EMPLEADO
CREATE SEQUENCE seq_empleado_id
START WITH 750
INCREMENT BY 3
NOCACHE
NOCYCLE;

--POBLAMIENTO TABLA AFP
INSERT INTO AFP (nom_afp) VALUES ('AFP Habitat');
INSERT INTO AFP (nom_afp) VALUES ('AFP Cuprum');
INSERT INTO AFP (nom_afp) VALUES ('AFP Provida');
INSERT INTO AFP (nom_afp) VALUES ('AFP PlanVital');

-- POBLAMIENTO TABLA SALUD
INSERT INTO SALUD (id_salud, nom_salud)
VALUES (seq_salud_id.NEXTVAL, 'Fonasa');

INSERT INTO SALUD (id_salud, nom_salud)
VALUES (seq_salud_id.NEXTVAL, 'Isapre Colmena');

INSERT INTO SALUD (id_salud, nom_salud)
VALUES (seq_salud_id.NEXTVAL, 'Isapre Banmédica');

INSERT INTO SALUD (id_salud, nom_salud)
VALUES (seq_salud_id.NEXTVAL, 'Isapre Cruz Blanca');

-- POBLAMIENTO MEDIO_PAGO
INSERT INTO MEDIO_PAGO (id_mpago, nombre_mpago) VALUES (11, 'Efectivo');
INSERT INTO MEDIO_PAGO (id_mpago, nombre_mpago) VALUES (12, 'Tarjeta Débito');
INSERT INTO MEDIO_PAGO (id_mpago, nombre_mpago) VALUES (13, 'Tarjeta Crédito');
INSERT INTO MEDIO_PAGO (id_mpago, nombre_mpago) VALUES (14, 'Cheque');

--POBLAMIENTO TABLA REGION
INSERT INTO REGION (id_region, nom_region) VALUES (1, 'Región Metropolitana');
INSERT INTO REGION (id_region, nom_region) VALUES (2, 'Valparaiso');
INSERT INTO REGION (id_region, nom_region) VALUES (3, 'Biobio');
INSERT INTO REGION (id_region, nom_region) VALUES (4, 'Los Lagos');

-- POBLAMIENTO TABLA EMPLEADO
INSERT INTO EMPLEADO (
    id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, 
    sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp
)
VALUES (
    seq_empleado_id.NEXTVAL, '11111111-1', 'Marcela', 'González', 'Pérez',
    TO_DATE('15-03-2022', 'DD-MM-YYYY'), 950000, 80000, 'S', 'Administrativo',
    NULL, 2050, 210
);

INSERT INTO EMPLEADO (
    id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, 
    sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp
)
VALUES (
    seq_empleado_id.NEXTVAL, '22222222-2', 'José', 'Muñoz', 'Ramírez',
    TO_DATE('10-07-2021', 'DD-MM-YYYY'), 900000, 75000, 'S', 'Administrativo',
    NULL, 2060, 216
);

INSERT INTO EMPLEADO (
    id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, 
    sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp
)
VALUES (
    seq_empleado_id.NEXTVAL, '33333333-3', 'Verónica', 'Soto', 'Alarcón',
    TO_DATE('05-01-2020', 'DD-MM-YYYY'), 880000, 70000, 'S', 'Vendedor',
    750, 2060, 228
);

INSERT INTO EMPLEADO (
    id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, 
    sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp
)
VALUES (
    seq_empleado_id.NEXTVAL, '44444444-4', 'Luis', 'Reyes', 'Fuentes', TO_DATE('01-04-2023', 'DD-MM-YYYY'), 
    560000, NULL, 'S', 'Vendedor', 750, 2070, 228
);

INSERT INTO EMPLEADO (
    id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, 
    sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp
)
VALUES (
    seq_empleado_id.NEXTVAL, '55555555-5', 'Claudia', 'Fernández', 'Lagos', TO_DATE('15-04-2023', 'DD-MM-YYYY'), 
    600000, NULL, 'S', 'Vendedor', 753, 2070, 216
);

INSERT INTO EMPLEADO (
    id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, 
    sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp
)
VALUES (
    seq_empleado_id.NEXTVAL, '66666666-6', 'Carlos', 'Navarro', 'Vega', TO_DATE('01-05-2023', 'DD-MM-YYYY'), 
    610000, NULL, 'S', 'Administrativo', 753, 2060, 210
);

INSERT INTO EMPLEADO (
    id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, 
    sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp
)
VALUES (
    seq_empleado_id.NEXTVAL, '77777777-7', 'Javiera', 'Pino', 'Rojas', TO_DATE('10-05-2023', 'DD-MM-YYYY'), 
    650000, NULL, 'S', 'Administrativo', 750, 2050, 210
);

INSERT INTO EMPLEADO (
    id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, 
    sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp
)
VALUES (
    seq_empleado_id.NEXTVAL, '88888888-8', 'Diego', 'Mella', 'Contreras', TO_DATE('12-05-2023', 'DD-MM-YYYY'),
    620000, NULL, 'S', 'Vendedor', 750, 2060, 216
);

INSERT INTO EMPLEADO (
    id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, 
    sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp
)
VALUES (
    seq_empleado_id.NEXTVAL, '99999999-9', 'Fernanda', 'Salas', 'Herrera', TO_DATE('18-05-2023', 'DD-MM-YYYY'), 
    570000, NULL, 'S', 'Vendedor', 753, 2070, 228
);

INSERT INTO EMPLEADO (
    id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, 
    sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp
)
VALUES (
    seq_empleado_id.NEXTVAL, '10101010-0', 'Tomás', 'Videal', 'Espinoza', TO_DATE('01-06-2023', 'DD-MM-YYYY'), 
    530000, NULL, 'S', 'Vendedor', NULL, 2050, 222
);

-- POBLAMIENTO TABLA VENTA
INSERT INTO VENTA (fecha_venta, total_venta, cod_mpago, cod_empleado)
VALUES (
    TO_DATE('12-05-2023', 'DD-MM-YYYY'), 225990, 12, 771
);

INSERT INTO VENTA (fecha_venta, total_venta, cod_mpago, cod_empleado)
VALUES (
    TO_DATE('23-10-2023', 'DD-MM-YYYY'), 524990, 13, 777
);

INSERT INTO VENTA (fecha_venta, total_venta, cod_mpago, cod_empleado)
VALUES (
    TO_DATE('17-02-2023', 'DD-MM-YYYY'), 466990, 11, 759
);

/*
CASO 4: RECUPERACION DE DATOS
*/