/*============================================================
  LIMPIEZA DE TABLAS Y SECUENCIAS PARA EJECUCION LIMPIA
  ============================================================*/
BEGIN
  EXECUTE IMMEDIATE 'DROP TABLE asignacion_turno CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE orden_mantencion CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE jefe_turno CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE operario CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE tec_mantencion CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE empleado CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE maquina CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE planta CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE turno CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE tipo_maquina CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE salud CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE afp CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE comuna CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE region CASCADE CONSTRAINTS';
EXCEPTION
  WHEN OTHERS THEN NULL;
END;
/

BEGIN
  EXECUTE IMMEDIATE 'DROP SEQUENCE region_seq';
EXCEPTION
  WHEN OTHERS THEN NULL;
END;
/

/*============================================================
  CREACION DE TABLAS
  ============================================================*/
CREATE TABLE region (
    id_region   NUMBER(2) NOT NULL,
    nom_region  VARCHAR2(50) NOT NULL
);

ALTER TABLE region ADD CONSTRAINT region_pk PRIMARY KEY (id_region);
ALTER TABLE region ADD CONSTRAINT region_nom_region_un UNIQUE (nom_region);

CREATE TABLE comuna (
    id_comuna   NUMBER(4) GENERATED BY DEFAULT AS IDENTITY (START WITH 1050 INCREMENT BY 5),
    nom_comuna  VARCHAR2(50) NOT NULL,
    id_region   NUMBER(2) NOT NULL
);

ALTER TABLE comuna ADD CONSTRAINT comuna_pk PRIMARY KEY (id_comuna);

CREATE TABLE afp (
    id_afp  NUMBER(2) NOT NULL,
    nom_afp VARCHAR2(25) NOT NULL
);

ALTER TABLE afp ADD CONSTRAINT afp_pk PRIMARY KEY (id_afp);

CREATE TABLE salud (
    id_salud    NUMBER(2) NOT NULL,
    nom_salud   VARCHAR2(25) NOT NULL
);

ALTER TABLE salud ADD CONSTRAINT salud_pk PRIMARY KEY (id_salud);

CREATE TABLE tipo_maquina (
    id_tipo_maquina     NUMBER(3) NOT NULL,
    nom_tipo_maquina    VARCHAR2(25) NOT NULL
);

ALTER TABLE tipo_maquina ADD CONSTRAINT tipo_maquina_pk PRIMARY KEY (id_tipo_maquina);

CREATE TABLE turno (
    id_turno        CHAR(5) NOT NULL,
    nombre_turno    VARCHAR2(10) NOT NULL,
    hora_inicio     CHAR(5) NOT NULL,       -- ingresar en formato HH:MM
    hora_fin        CHAR(5) NOT NULL        -- ingresar en formato HH:MM
);

ALTER TABLE turno ADD CONSTRAINT turno_pk PRIMARY KEY (id_turno);

CREATE TABLE planta (
    id_planta       NUMBER(2) NOT NULL,
    nombre_planta   VARCHAR2(50) NOT NULL,
    direccion       VARCHAR2(100) NOT NULL,
    id_comuna       NUMBER NOT NULL
);

ALTER TABLE planta ADD CONSTRAINT planta_pk PRIMARY KEY (id_planta);

CREATE TABLE maquina (
    id_maquina      NUMBER(4) GENERATED BY DEFAULT AS IDENTITY,
    num_maquina     NUMBER(3) NOT NULL,
    nom_maquina     VARCHAR2(25) NOT NULL,
    estado          CHAR(1) NOT NULL CHECK (estado IN ('S','N')),
    id_tipo_maquina NUMBER(3) NOT NULL,
    id_planta       NUMBER NOT NULL
);

ALTER TABLE maquina ADD CONSTRAINT maquina_pk PRIMARY KEY (id_maquina);
ALTER TABLE maquina ADD CONSTRAINT maquina_num_planta_un UNIQUE (num_maquina, id_planta);

CREATE TABLE empleado (
    id_empleado         NUMBER(3) NOT NULL,
    rut                 VARCHAR2(8) NOT NULL, --no debe contener puntos, formato 10123456
    dv                  CHAR(1) NOT NULL CHECK (dv IN ('0','1','2','3','4','5','6','7','8','9','K','k')),
    nombres             VARCHAR2(50) NOT NULL,
    primer_apellido     VARCHAR2(25) NOT NULL,
    segundo_apellido    VARCHAR2(25) NOT NULL,
    fecha_contratacion  DATE NOT NULL,
    sueldo_base         NUMBER(7) NOT NULL,
    estado_activo       CHAR(1) DEFAULT 'S' CHECK (estado_activo IN ('S','N')),
    id_planta           NUMBER NOT NULL,
    id_afp              NUMBER(2) NOT NULL,
    id_salud            NUMBER(2) NOT NULL,
    id_jefe             NUMBER(3)
);

ALTER TABLE empleado ADD CONSTRAINT empleado_pk PRIMARY KEY (id_empleado);
ALTER TABLE empleado ADD CONSTRAINT empleado_rut_un UNIQUE (rut);

CREATE TABLE jefe_turno (
    id_empleado     NUMBER(3) NOT NULL,
    area_resp       VARCHAR2(25) NOT NULL,
    max_operario    NUMBER(2)
);

ALTER TABLE jefe_turno ADD CONSTRAINT jefe_turno_pk PRIMARY KEY (id_empleado);

CREATE TABLE operario (
    id_empleado     NUMBER(3) NOT NULL,
    cat_proceso     VARCHAR2(25) NOT NULL,
    certificacion   VARCHAR2(25),
    horas_turno     NUMBER(2,1) DEFAULT 8
);

ALTER TABLE operario ADD CONSTRAINT operario_pk PRIMARY KEY (id_empleado);

CREATE TABLE tec_mantencion (
    id_empleado         NUMBER(3) NOT NULL,
    especialidad        VARCHAR2(25) NOT NULL,
    nivel_certificacion VARCHAR2(25),
    tiempo_respuesta    NUMBER(3) NOT NULL --valor expresado en minutos
);

ALTER TABLE tec_mantencion ADD CONSTRAINT tec_mantencion_pk PRIMARY KEY (id_empleado);

CREATE TABLE asignacion_turno (
    id_asignacion   NUMBER(5) NOT NULL,
    fecha           DATE NOT NULL,
    rol_turno       VARCHAR2(25),
    id_turno        CHAR(5) NOT NULL,
    id_empleado     NUMBER(3) NOT NULL,
    id_maquina      NUMBER NOT NULL
);

ALTER TABLE asignacion_turno ADD CONSTRAINT asignacion_turno_pk PRIMARY KEY (id_asignacion);
ALTER TABLE asignacion_turno ADD CONSTRAINT asignacion_turno_un UNIQUE (id_empleado, fecha);

CREATE TABLE orden_mantencion (
    id_orden            NUMBER(5) NOT NULL,
    fecha_programada    DATE NOT NULL,
    fecha_ejecucion     DATE,
    descripcion         VARCHAR2(150),
    id_maquina          NUMBER NOT NULL,
    id_tecnico          NUMBER(3) NOT NULL
);

ALTER TABLE orden_mantencion ADD CONSTRAINT orden_mantencion_pk PRIMARY KEY (id_orden);
ALTER TABLE orden_mantencion ADD CONSTRAINT orden_mantencion_fecha_ck CHECK (
    fecha_ejecucion IS NULL OR fecha_ejecucion >= fecha_programada
);

/*============================================================
  RELACIONES ENTRE ENTIDADES
  ============================================================*/
-- comuna -> region
ALTER TABLE comuna ADD CONSTRAINT comuna_region_fk FOREIGN KEY (id_region) REFERENCES region (id_region);

-- planta -> comuna
ALTER TABLE planta ADD CONSTRAINT planta_comuna_fk FOREIGN KEY (id_comuna) REFERENCES comuna (id_comuna);

-- maquina -> planta, tipo_maquina
ALTER TABLE maquina ADD CONSTRAINT maquina_planta_fk FOREIGN KEY (id_planta) REFERENCES planta (id_planta);
ALTER TABLE maquina ADD CONSTRAINT maquina_tipo_maquina_fk FOREIGN KEY (id_tipo_maquina) REFERENCES tipo_maquina (id_tipo_maquina);

-- empleado -> planta, afp, salud, jefe
ALTER TABLE empleado ADD CONSTRAINT empleado_planta_fk FOREIGN KEY (id_planta) REFERENCES planta (id_planta);
ALTER TABLE empleado ADD CONSTRAINT empleado_afp_fk FOREIGN KEY (id_afp) REFERENCES afp (id_afp);
ALTER TABLE empleado ADD CONSTRAINT empleado_salud_fk FOREIGN KEY (id_salud) REFERENCES salud (id_salud);
ALTER TABLE empleado ADD CONSTRAINT empleado_jefe_fk FOREIGN KEY (id_jefe) REFERENCES empleado (id_empleado);

-- subtipos -> empleado
ALTER TABLE jefe_turno ADD CONSTRAINT jefe_turno_empleado_fk FOREIGN KEY (id_empleado) REFERENCES empleado (id_empleado);
ALTER TABLE operario ADD CONSTRAINT operario_empleado_fk FOREIGN KEY (id_empleado) REFERENCES empleado (id_empleado);
ALTER TABLE tec_mantencion ADD CONSTRAINT tec_mantencion_empleado_fk FOREIGN KEY (id_empleado) REFERENCES empleado (id_empleado);

-- asignacion_turno -> empleado, turno, maquina
ALTER TABLE asignacion_turno ADD CONSTRAINT asignacion_turno_empleado_fk FOREIGN KEY (id_empleado) REFERENCES empleado (id_empleado);
ALTER TABLE asignacion_turno ADD CONSTRAINT asignacion_turno_turno_fk FOREIGN KEY (id_turno) REFERENCES turno (id_turno);
ALTER TABLE asignacion_turno ADD CONSTRAINT asignacion_turno_maquina_fk FOREIGN KEY (id_maquina) REFERENCES maquina (id_maquina);

-- orden_mantencion -> maquina, técnico
ALTER TABLE orden_mantencion ADD CONSTRAINT orden_mantencion_maquina_fk FOREIGN KEY (id_maquina) REFERENCES maquina (id_maquina);
ALTER TABLE orden_mantencion ADD CONSTRAINT orden_mantencion_tec_fk FOREIGN KEY (id_tecnico) REFERENCES tec_mantencion (id_empleado);

/*============================================================
  CREACION SECUENCIAS NECESARIAS
  ============================================================*/ 
--Secuencia id region
CREATE SEQUENCE region_seq START WITH 21 INCREMENT BY 1;
  
/*============================================================
  POBLAMIENTO TABLAS
  ============================================================*/
-- Valores tabla region
INSERT INTO region (id_region, nom_region)
VALUES (region_seq.NEXTVAL, 'Región de Valparaíso');

INSERT INTO region (id_region, nom_region)
VALUES (region_seq.NEXTVAL, 'Región Metropolitana');

-- Valores tabla comuna
INSERT INTO comuna (nom_comuna, id_region)
VALUES ('Quilpué', 21);

INSERT INTO comuna (nom_comuna, id_region)
VALUES ('Maipú', 22);

-- Valores tabla planta
INSERT INTO planta (id_planta, nombre_planta, direccion, id_comuna)
VALUES (45, 'Planta Oriente', 'Camino Industrial 1234', 1050);

INSERT INTO planta (id_planta, nombre_planta, direccion, id_comuna)
VALUES (46, 'Planta Costa', 'Av. Vidrieras 890', 1055);
  
-- Valores tabla turno
INSERT INTO turno (id_turno, nombre_turno, hora_inicio, hora_fin)
VALUES ('M0715', 'Mañana', '07:00', '15:00');

INSERT INTO turno (id_turno, nombre_turno, hora_inicio, hora_fin)
VALUES ('N2307', 'Noche', '23:00', '07:00');

INSERT INTO turno (id_turno, nombre_turno, hora_inicio, hora_fin)
VALUES ('T1523', 'Tarde', '15:00', '23:00');

COMMIT;

/*============================================================
  RECUPERACION DE DATOS
  ============================================================*/
-- Informe 1: Turnos nocturnos con horario de inicio posterior a las 20:00hrs
SELECT id_turno || ' - ' || nombre_turno AS TURNO,
       hora_inicio AS ENTRADA,
       hora_fin AS SALIDA
FROM turno
WHERE hora_inicio > '20:00'
ORDER BY hora_inicio DESC;

-- Informe 2: Turnos diurnos con horario de inicio entre las 06:00 y 14:59hrs
SELECT nombre_turno || ' (' || id_turno || ')' AS turno,
       hora_inicio AS ENTRADA,
       hora_fin AS SALIDA
FROM turno
WHERE hora_inicio BETWEEN '06:00' AND '14:59'
ORDER BY hora_inicio ASC;